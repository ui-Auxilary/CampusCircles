// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  username      String
  email         String
  password      String
  profile       Profile?

  eventIDs      String[]        @db.ObjectId
  events        Event[]         @relation(fields: [eventIDs], references: [id])

  friendIds     String[]        @db.ObjectId

  invitationIDs String[]        @db.ObjectId
  invitations   Invitation[]    @relation(fields: [invitationIDs], references: [id])  

  eventsCreated Event[]         @relation("EventsCreator")
}

model Invitation {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  eventID       String          @unique

  inviteeIDs    String[]        @db.ObjectId
  invitees      User[]          @relation(fields: [inviteeIDs], references: [id])

  status        String
}

model Tag {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  
  eventIDs      String[]        @db.ObjectId
  event         Event[]         @relation(fields: [eventIDs], references: [id])  
}

model Event {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  location      String
  date          String
  time          String
  description   String?
  public        Boolean         @default(true)
  society       Boolean         @default(true)

  tagIDs        String[]        @unique @db.ObjectId  
  tags          Tag[]           @relation(fields: [tagIDs], references: [id])  

  attendeeIDs   String[]        @unique @db.ObjectId
  attendees     User[]          @relation(fields: [attendeeIDs], references: [id])  

  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt

  creatorId     String          @unique @db.ObjectId  
  creator       User            @relation("EventsCreator", fields: [creatorId], references: [id])
}

model Profile {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  photo         String
  gender        String
  age           String
  mbti          String
  bio           String
  interests     String[]       
  courses       String[]    

  userId        String          @unique @db.ObjectId 
  user          User            @relation(fields: [userId], references: [id])
}